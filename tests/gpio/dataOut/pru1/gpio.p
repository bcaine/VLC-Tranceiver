.origin 0
.entrypoint BEGIN_SQ_LOOP
#include "gpio.hp"
#define PIN_BITMASK 0x1000000000000000

BEGIN_SQ_LOOP:

	MOV r2, 98
	MOV r3, 97
	MOV r0, 0
	MOV r4, 255

MAIN_LOOP:
	ADD r0, r0, 1

	LSR r4, r5, 16
	AND r4, r4, PIN_BITMASK
	AND r30, r30, r4
	LSR r4, r5, 15
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE1_BIT1:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT1, r1, r2

	AND r30, r4, r4
	LSR r4, r5, 14
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE1_BIT2:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT2, r1, r2

	AND r30, r4, r4
	LSR r4, r5, 13
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE1_BIT3

BACKUP_BYTE1_BIT2:
	JMP MAIN_LOOP

DELAY_BYTE1_BIT3:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT3, r1, r3

	AND r30, r4, r4
	LSR r4, r5, 12
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE1_BIT4:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT4, r1, r2

	AND r30, r4, r4
	LSR r4, r5, 11
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE1_BIT5

BACKUP_BYTE1_BIT4:
	JMP BACKUP_BYTE1_BIT2

DELAY_BYTE1_BIT5:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT5, r1, r2

	AND r30, r4, r4 
	LSR r4, r5, 10
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE1_BIT6:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT6, r1, r2

	AND r30, r4, r4
	LSR r4, r5, 9
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE1_BIT7

BACKUP_BYTE1_BIT6:
	JMP BACKUP_BYTE1_BIT4

DELAY_BYTE1_BIT7:
	ADD r1, r1, 1
	QBNE DELAY_BYTE1_BIT7, r1, r3

	AND r30, r4, r4
	LSR r4, r5, 8
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE2_BIT0:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT0, r1, r2

	AND r30, r4, r4 
	LSR r4, r5, 7
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE2_BIT1

BACKUP_BYTE2_BIT0:
	JMP BACKUP_BYTE1_BIT6

DELAY_BYTE2_BIT1:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT1, r1, r2

	AND r30, r4, r4 
	LSR r4, r5, 6
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE2_BIT2:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT2, r1, r2

	AND r30, r4, r4
	LSR r4, r5, 5
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE2_BIT3

BACKUP_BYTE2_BIT2:
	JMP BACKUP_BYTE2_BIT0

DELAY_BYTE2_BIT3:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT3, r1, r3

	AND r30, r4, r4
	LSR r4, r5, 4
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE2_BIT4:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT4, r1, r2

	AND r30, r4, r4 
	LSR r4, r5, 3
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE2_BIT5

BACKUP_BYTE2_BIT4:
	JMP BACKUP_BYTE2_BIT2

DELAY_BYTE2_BIT5:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT5, r1, r2

	AND r30, r4, r4
	LSR r4, r5, 2
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE2_BIT6:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT6, r1, r2

	AND r30, r4, r4 
	LSR r4, r5, 1
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE2_BIT7

BACKUP_BYTE2_BIT6:
	JMP BACKUP_BYTE2_BIT4

DELAY_BYTE2_BIT7:
	ADD r1, r1, 1
	QBNE DELAY_BYTE2_BIT7, r1, r3

	AND r30, r4, r4 
	LSR r4, r5, 0
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE3_BIT0:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT0, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 1
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE3_BIT1

BACKUP_BYTE3_BIT0:
	JMP BACKUP_BYTE2_BIT6

DELAY_BYTE3_BIT1:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT1, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 2
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE3_BIT2:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT2, r1, r2

	AND r30, r4, r4
	LSL r4, r5, 3
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE3_BIT3

BACKUP_BYTE3_BIT2:
	JMP BACKUP_BYTE3_BIT0

DELAY_BYTE3_BIT3:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT3, r1, r3

	AND r30, r4, r4
	LSL r4, r5, 4
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE3_BIT4:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT4, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 5
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE3_BIT5

BACKUP_BYTE3_BIT4:
	JMP BACKUP_BYTE3_BIT2

DELAY_BYTE3_BIT5:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT5, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 6
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE3_BIT6:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT6, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 7
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE3_BIT7

BACKUP_BYTE3_BIT6:
	JMP BACKUP_BYTE3_BIT4

DELAY_BYTE3_BIT7:
	ADD r1, r1, 1
	QBNE DELAY_BYTE3_BIT7, r1, r3

	AND r30, r4, r4 
	LSL r4, r5, 8
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE4_BIT0:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT0, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 9
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE4_BIT1

BACKUP_BYTE4_BIT0:
	JMP BACKUP_BYTE3_BIT6

DELAY_BYTE4_BIT1:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT1, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 10
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE4_BIT2:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT2, r1, r2

	AND r30, r4, r4
	LSL r4, r5, 11
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE4_BIT3

BACKUP_BYTE4_BIT2:
	JMP BACKUP_BYTE4_BIT0

DELAY_BYTE4_BIT3:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT3, r1, r3

	AND r30, r4, r4 
	LSL r4, r5, 12
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE4_BIT4:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT4, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 13
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE4_BIT5

BACKUP_BYTE4_BIT4:
	JMP BACKUP_BYTE4_BIT2

DELAY_BYTE4_BIT5:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT5, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 14
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE4_BIT6:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT6, r1, r2

	AND r30, r4, r4 
	LSL r4, r5, 15
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 0

	JMP DELAY_BYTE4_BIT7

BACKUP_BYTE4_BIT6:
	JMP BACKUP_BYTE4_BIT4

DELAY_BYTE4_BIT7:
	ADD r1, r1, 1
	QBNE DELAY_BYTE4_BIT7, r1, r3

	AND r30, r4, r4 
	LSR r4, r6, 16
	AND r4, r4, PIN_BITMASK
	MOV r1, 0

DELAY_BYTE5_BIT0:
	ADD r1, r1, 1
	QBNE DELAY_BYTE5_BIT0, r1, r2

	AND r30, r4, r4 
	LSR r4, r6, 15
	AND r4, r4, PIN_BITMASK
	MOV r1, 0
	MOV r1, 100000
	QBEQ END_LOOP, r0, r1

BACKUP_BYTE5_BIT0:
	JMP BACKUP_BYTE4_BIT6

END_LOOP:
        MOV r31.b0, PRU1_ARM_INTERRUPT+16

	HALT

